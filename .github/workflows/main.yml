name: OtoFon Dinamik Analiz

on:
  push:
    branches:
      - main
  schedule:
    # Her iş günü Türkiye saati ile sabah 09:00 (UTC 06:00)
    - cron: '0 6 * * 1-5'
  workflow_dispatch: # Manuel çalıştırma için

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Depoyu Kopyala
        uses: actions/checkout@v4

      - name: Python 3.10 Kurulumu
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Bağımlılıklar için Cache Kurulumu
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Bağımlılıkları Yükle
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Kod Kalitesini Kontrol Et (Linting)
        run: ruff check .

      - name: Adım 1: Fon Listesi Oluştur (tarama_script.py)
        id: tarama
        run: python tarama_script.py weekly 2 # Son 2 haftalık getiriye göre filtrele

      - name: Adım 2: Dinamik Analiz Yap (analiz_script.py)
        # Sadece bir önceki adım başarılıysa ve filtrelenmiş fon listesi boş değilse çalışır.
        if: ${{ success() }}
        run: python analiz_script.py

      - name: Analiz Sonuçlarını Kaydet (Artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: analiz-sonuclari-${{ github.run_id }}
          path: |
            *.xlsx
            *.txt
